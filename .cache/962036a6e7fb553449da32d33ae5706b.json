{"dependencies":[{"name":"d3-array","loc":{"line":1,"column":20}},{"name":"../math.js","loc":{"line":2,"column":19}},{"name":"../noop.js","loc":{"line":3,"column":17}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d3Array = require(\"d3-array\");\n\nvar _math = require(\"../math.js\");\n\nvar _noop = require(\"../noop.js\");\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar lengthSum = new _d3Array.Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: _noop2.default,\n  lineStart: function () {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function () {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = _noop2.default;\n  },\n  polygonStart: function () {\n    lengthRing = true;\n  },\n  polygonEnd: function () {\n    lengthRing = null;\n  },\n  result: function () {\n    var length = +lengthSum;\n    lengthSum = new _d3Array.Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add((0, _math.sqrt)(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexports.default = lengthStream;"},"hash":"1909fd7742c88364d7eab310e1291611"}