{"dependencies":[{"name":"./math.js","loc":{"line":1,"column":70}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (a, b) {\n  var x0 = a[0] * _math.radians,\n      y0 = a[1] * _math.radians,\n      x1 = b[0] * _math.radians,\n      y1 = b[1] * _math.radians,\n      cy0 = (0, _math.cos)(y0),\n      sy0 = (0, _math.sin)(y0),\n      cy1 = (0, _math.cos)(y1),\n      sy1 = (0, _math.sin)(y1),\n      kx0 = cy0 * (0, _math.cos)(x0),\n      ky0 = cy0 * (0, _math.sin)(x0),\n      kx1 = cy1 * (0, _math.cos)(x1),\n      ky1 = cy1 * (0, _math.sin)(x1),\n      d = 2 * (0, _math.asin)((0, _math.sqrt)((0, _math.haversin)(y1 - y0) + cy0 * cy1 * (0, _math.haversin)(x1 - x0))),\n      k = (0, _math.sin)(d);\n\n  var interpolate = d ? function (t) {\n    var B = (0, _math.sin)(t *= d) / k,\n        A = (0, _math.sin)(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.atan2)(z, (0, _math.sqrt)(x * x + y * y)) * _math.degrees];\n  } : function () {\n    return [x0 * _math.degrees, y0 * _math.degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar _math = require(\"./math.js\");"},"hash":"981b0ad74877274077d660473a919db0"}