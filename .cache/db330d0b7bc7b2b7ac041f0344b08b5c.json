{"dependencies":[{"name":"./array.js","loc":{"line":1,"column":20}},{"name":"./bisect.js","loc":{"line":2,"column":19}},{"name":"./constant.js","loc":{"line":3,"column":21}},{"name":"./extent.js","loc":{"line":4,"column":19}},{"name":"./identity.js","loc":{"line":5,"column":21}},{"name":"./nice.js","loc":{"line":6,"column":17}},{"name":"./ticks.js","loc":{"line":7,"column":35}},{"name":"./threshold/sturges.js","loc":{"line":8,"column":20}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  var value = _identity2.default,\n      domain = _extent2.default,\n      threshold = _sturges2.default;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1,\n            tn = +tz;\n      if (domain === _extent2.default) [x0, x1] = (0, _nice2.default)(x0, x1, tn);\n      tz = (0, _ticks2.default)(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain’s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don’t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === _extent2.default) {\n          const step = (0, _ticks.tickIncrement)(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[(0, _bisect2.default)(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : (0, _constant2.default)(_), histogram) : value;\n  };\n\n  histogram.domain = function (_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : (0, _constant2.default)([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? (0, _constant2.default)(_array.slice.call(_)) : (0, _constant2.default)(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar _array = require(\"./array.js\");\n\nvar _bisect = require(\"./bisect.js\");\n\nvar _bisect2 = _interopRequireDefault(_bisect);\n\nvar _constant = require(\"./constant.js\");\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nvar _extent = require(\"./extent.js\");\n\nvar _extent2 = _interopRequireDefault(_extent);\n\nvar _identity = require(\"./identity.js\");\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nvar _nice = require(\"./nice.js\");\n\nvar _nice2 = _interopRequireDefault(_nice);\n\nvar _ticks = require(\"./ticks.js\");\n\nvar _ticks2 = _interopRequireDefault(_ticks);\n\nvar _sturges = require(\"./threshold/sturges.js\");\n\nvar _sturges2 = _interopRequireDefault(_sturges);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }"},"hash":"dcd9ecc02991ad5df5421051c74a401a"}