{"dependencies":[{"name":"../math.js","loc":{"line":1,"column":51}},{"name":"../rotation.js","loc":{"line":2,"column":21}},{"name":"./index.js","loc":{"line":3,"column":23}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mercatorRaw = mercatorRaw;\n\nexports.default = function () {\n  return mercatorProjection(mercatorRaw).scale(961 / _math.tau);\n};\n\nexports.mercatorProjection = mercatorProjection;\n\nvar _math = require(\"../math.js\");\n\nvar _rotation = require(\"../rotation.js\");\n\nvar _rotation2 = _interopRequireDefault(_rotation);\n\nvar _index = require(\"./index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, (0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * (0, _math.atan)((0, _math.exp)(y)) - _math.halfPi];\n};\n\nfunction mercatorProjection(project) {\n  var m = (0, _index2.default)(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = _math.pi * scale(),\n        t = m((0, _rotation2.default)(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}"},"hash":"037a1c09fdae0e7f8ea447509d11ddb0"}