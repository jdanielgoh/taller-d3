{"dependencies":[{"name":"d3-array","loc":{"line":1,"column":21}},{"name":"./init.js","loc":{"line":2,"column":24}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = threshold;\n\nvar _d3Array = require(\"d3-array\");\n\nvar _init = require(\"./init.js\");\n\nfunction threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function (y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function () {\n    return threshold().domain(domain).range(range).unknown(unknown);\n  };\n\n  return _init.initRange.apply(scale, arguments);\n}"},"hash":"cce1bc87cd7d5d5653754390cfcbcd6b"}