{"dependencies":[{"name":"d3-path","loc":{"line":1,"column":19}},{"name":"./array.js","loc":{"line":2,"column":20}},{"name":"./constant.js","loc":{"line":3,"column":21}},{"name":"./math.js","loc":{"line":4,"column":45}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  return ribbon();\n};\n\nexports.ribbonArrow = ribbonArrow;\n\nvar _d3Path = require(\"d3-path\");\n\nvar _array = require(\"./array.js\");\n\nvar _constant = require(\"./constant.js\");\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nvar _math = require(\"./math.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = _array.slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - _math.halfPi,\n        sa1 = endAngle.apply(this, argv) - _math.halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - _math.halfPi,\n        ta1 = endAngle.apply(this, argv) - _math.halfPi;\n\n    if (!context) context = buffer = (0, _d3Path.path)();\n\n    if (ap > _math.epsilon) {\n      if ((0, _math.abs)(sa1 - sa0) > ap * 2 + _math.epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);else sa0 = sa1 = (sa0 + sa1) / 2;\n      if ((0, _math.abs)(ta1 - ta0) > ap * 2 + _math.epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * (0, _math.cos)(sa0), sr * (0, _math.sin)(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments),\n            tr2 = tr - hr,\n            ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * (0, _math.cos)(ta0), tr2 * (0, _math.sin)(ta0));\n        context.lineTo(tr * (0, _math.cos)(ta2), tr * (0, _math.sin)(ta2));\n        context.lineTo(tr2 * (0, _math.cos)(ta1), tr2 * (0, _math.sin)(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * (0, _math.cos)(ta0), tr * (0, _math.sin)(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * (0, _math.cos)(sa0), sr * (0, _math.sin)(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function (_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : (0, _constant2.default)(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function (_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : (0, _constant2.default)(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function (_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : (0, _constant2.default)(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function (_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : (0, _constant2.default)(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : (0, _constant2.default)(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : (0, _constant2.default)(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : (0, _constant2.default)(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function (_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function (_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nfunction ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}"},"hash":"e030301254ad7411284651039ba5d27b"}