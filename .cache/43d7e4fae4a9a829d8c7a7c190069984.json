{"dependencies":[{"name":"./index.js","loc":{"line":1,"column":23}},{"name":"../math.js","loc":{"line":2,"column":50}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.equalEarthRaw = equalEarthRaw;\n\nexports.default = function () {\n  return (0, _index2.default)(equalEarthRaw).scale(177.158);\n};\n\nvar _index = require(\"./index.js\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _math = require(\"../math.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = (0, _math.sqrt)(3) / 2,\n    iterations = 12;\n\nfunction equalEarthRaw(lambda, phi) {\n  var l = (0, _math.asin)(M * (0, _math.sin)(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * (0, _math.cos)(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if ((0, _math.abs)(delta) < _math.epsilon2) break;\n  }\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / (0, _math.cos)(l), (0, _math.asin)((0, _math.sin)(l) / M)];\n};"},"hash":"4550533e6845ae4e5b4f40570b53a8cc"}