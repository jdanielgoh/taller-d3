{"dependencies":[{"name":"internmap","loc":{"line":1,"column":24}},{"name":"./identity.js","loc":{"line":2,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = group;\nexports.groups = groups;\nexports.rollup = rollup;\nexports.rollups = rollups;\nexports.index = index;\nexports.indexes = indexes;\n\nvar _internmap = require(\"internmap\");\n\nvar _identity = require(\"./identity.js\");\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction group(values, ...keys) {\n  return nest(values, _identity2.default, _identity2.default, keys);\n}\n\nfunction groups(values, ...keys) {\n  return nest(values, Array.from, _identity2.default, keys);\n}\n\nfunction rollup(values, reduce, ...keys) {\n  return nest(values, _identity2.default, reduce, keys);\n}\n\nfunction rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nfunction index(values, ...keys) {\n  return nest(values, _identity2.default, unique, keys);\n}\n\nfunction indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new _internmap.InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  }(values, 0);\n}"},"hash":"610e22f75226c5b883c3a38a7edb0fe7"}