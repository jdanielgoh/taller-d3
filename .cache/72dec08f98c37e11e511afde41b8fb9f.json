{"dependencies":[{"name":"./ascending.js","loc":{"line":1,"column":22}},{"name":"./permute.js","loc":{"line":2,"column":20}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sort;\n\nvar _ascending = require(\"./ascending.js\");\n\nvar _ascending2 = _interopRequireDefault(_ascending);\n\nvar _permute = require(\"./permute.js\");\n\nvar _permute2 = _interopRequireDefault(_permute);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n  let [f = _ascending2.default] = F;\n  if (f.length === 1 || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = (0, _ascending2.default)(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => (0, _ascending2.default)(f[i], f[j]));\n    }\n    return (0, _permute2.default)(values, index);\n  }\n  return values.sort(f);\n}"},"hash":"e9f47d53f41ba353192e7582206fc252"}