{"dependencies":[{"name":"./count.js","loc":{"line":1,"column":23}},{"name":"./each.js","loc":{"line":2,"column":22}},{"name":"./eachBefore.js","loc":{"line":3,"column":28}},{"name":"./eachAfter.js","loc":{"line":4,"column":27}},{"name":"./find.js","loc":{"line":5,"column":22}},{"name":"./sum.js","loc":{"line":6,"column":21}},{"name":"./sort.js","loc":{"line":7,"column":22}},{"name":"./path.js","loc":{"line":8,"column":22}},{"name":"./ancestors.js","loc":{"line":9,"column":27}},{"name":"./descendants.js","loc":{"line":10,"column":29}},{"name":"./leaves.js","loc":{"line":11,"column":24}},{"name":"./links.js","loc":{"line":12,"column":23}},{"name":"./iterator.js","loc":{"line":13,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hierarchy;\nexports.computeHeight = computeHeight;\nexports.Node = Node;\n\nvar _count = require(\"./count.js\");\n\nvar _count2 = _interopRequireDefault(_count);\n\nvar _each = require(\"./each.js\");\n\nvar _each2 = _interopRequireDefault(_each);\n\nvar _eachBefore = require(\"./eachBefore.js\");\n\nvar _eachBefore2 = _interopRequireDefault(_eachBefore);\n\nvar _eachAfter = require(\"./eachAfter.js\");\n\nvar _eachAfter2 = _interopRequireDefault(_eachAfter);\n\nvar _find = require(\"./find.js\");\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _sum = require(\"./sum.js\");\n\nvar _sum2 = _interopRequireDefault(_sum);\n\nvar _sort = require(\"./sort.js\");\n\nvar _sort2 = _interopRequireDefault(_sort);\n\nvar _path = require(\"./path.js\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _ancestors = require(\"./ancestors.js\");\n\nvar _ancestors2 = _interopRequireDefault(_ancestors);\n\nvar _descendants = require(\"./descendants.js\");\n\nvar _descendants2 = _interopRequireDefault(_descendants);\n\nvar _leaves = require(\"./leaves.js\");\n\nvar _leaves2 = _interopRequireDefault(_leaves);\n\nvar _links = require(\"./links.js\");\n\nvar _links2 = _interopRequireDefault(_links);\n\nvar _iterator = require(\"./iterator.js\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height; while ((node = node.parent) && node.height < ++height);\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: _count2.default,\n  each: _each2.default,\n  eachAfter: _eachAfter2.default,\n  eachBefore: _eachBefore2.default,\n  find: _find2.default,\n  sum: _sum2.default,\n  sort: _sort2.default,\n  path: _path2.default,\n  ancestors: _ancestors2.default,\n  descendants: _descendants2.default,\n  leaves: _leaves2.default,\n  links: _links2.default,\n  copy: node_copy,\n  [Symbol.iterator]: _iterator2.default\n};"},"hash":"1348aedb3eec784a4155fe7c7a176270"}